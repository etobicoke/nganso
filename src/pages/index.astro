---
import Layout from '../layouts/Layout.astro';
---

<Layout title="ngan.so --- coming soon">
	<div class="home">
	    <video id="bg-video" autoplay muted loop>
	        <source src="/assets/videos/vid0.mp4" type="video/mp4" id="video" />
        </video>
        <div class="overlay"></div>
        <div class="home-content">
            <h1>
                <span>I'm on it.</span>
            </h1>
            <h5 class="meantime">In the meantime, please feel free to e-mail me at:</h5>
            <h4>gustave `at` nganso `dot` com</h4>
            <section class="logo-section">
                <div>
                    <span class="github-logo">
                        <a href="https://github.com/etobicoke/">
                            <img src="/assets/images/svg/iconmonstr-github-3.svg" alt="GitHub Logo"/>
                        </a>
                    </span>
                    <span class="linkedin-logo">
                        <a href="https://www.linkedin.com/in/gnganso-javascript-developer-engineer-architect/">
                            <img src="/assets/images/svg/iconmonstr-linkedin-3.svg" alt="LinkedIn Logo"/>
                        </a>
                    </span>
                </div>
            </section>
        </div>
	</div>
</Layout>
<style>
	:root {
		--astro-gradient: linear-gradient(0deg, #4f39fa, #171216);
	}

	* {
		box-sizing: border-box;
		margin: 0;
		padding: 0;
	}

	h1 {
		margin: 2rem 0;
	}

	main {
		margin: auto;
		padding: 1.5em;
		max-width: 60ch;
	}

	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}

	.link-card-grid > * {
		transition: transform 0.3s ease;
	}

	.link-card-grid > *:hover {
		transform: scale(1.10);
	}

    .logo-section {
        display: flex;
        justify-content: center;
    }

    .github-logo {
        margin-right: inherit;
    }

    .linkedin-logo {
        margin-left: inherit;
    }

</style>
<script>
    // TODO - Move to a separate file
    document.addEventListener("DOMContentLoaded", () => {

        const VIDEO_DIR = "assets/videos"; // Directory where videos are stored
        const VIDEO_COUNT = 10;          // Total number of videos available
        const VIDEO_ELEMENT_ID = "video";  // ID of the <video> element

        /**
         * Helper function to construct the video file path.
         * @param {string} videoSrc - Video file name (without extension).
         * @returns {string} Full path to the video file.
         */
        const getVidSource = (videoSrc) => `${VIDEO_DIR}/${videoSrc}.mp4`;

        /**
         * Generates an array of video file names (e.g., vid0, vid1, ...).
         * @param {number} count - Number of videos to generate.
         * @returns {string[]} Array of video file names.
         */
        const generateVideoArray = (count) => Array.from({ length: count }, (_, index) => `vid${index}`);

        // Generate the array of video file names
        const vidArr = generateVideoArray(VIDEO_COUNT);

        // Find the <video> element
        const videoElement = document.getElementsByTagName(VIDEO_ELEMENT_ID)[0];

        if (!videoElement) {
            console.error(`Error: Video element with ID '${VIDEO_ELEMENT_ID}' not found in the DOM.`);
            return;
        }

        // Randomly select a video from the array
        const selectedVideo = vidArr[Math.floor(Math.random() * vidArr.length)];
        const srcAttr = getVidSource(selectedVideo);

        // Set the video source and preload metadata
        videoElement.setAttribute("src", srcAttr);
        videoElement.setAttribute("preload", "metadata");
        videoElement.load();

        // Handle video loading errors
        // TODO: review below logic
        videoElement.addEventListener("error", () => {
            alert("Sorry, the video could not be loaded. Please try again later.");
        });

        // Optional: Add an event listener for when the video is ready
        // TODO: Is below code necessary
        videoElement.addEventListener("loadedmetadata", () => {
            // TODO: review below logic
            console.log(`Video successfully loaded: ${srcAttr}`);
        });
    });
</script>

